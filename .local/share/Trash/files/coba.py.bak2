#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 4.17
# In conjunction with Tcl version 8.6
#    Oct 13, 2018 04:40:19 PM WIB  platform: Linux

import sys

try:
    from Tkinter import *
except ImportError:
    from tkinter import *

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True

import coba_support

def vp_start_gui():
    '''Starting point when module is the main routine.'''
    global val, w, root
    root = Tk()
    top = New_Toplevel (root)
    coba_support.init(root, top)
    root.mainloop()

w = None
def create_New_Toplevel(root, *args, **kwargs):
    '''Starting point when module is imported by another program.'''
    global w, w_win, rt
    rt = root
    w = Toplevel (root)
    top = New_Toplevel (w)
    coba_support.init(w, top, *args, **kwargs)
    return (w, top)

def destroy_New_Toplevel():
    global w
    w.destroy()
    w = None


class New_Toplevel:
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85' 
        _ana2color = '#d9d9d9' # X11 color: 'gray85' 
        font9 = "-family fixed -size 10 -weight normal -slant roman "  \
            "-underline 0 -overstrike 0"
        self.style = ttk.Style()
        if sys.platform == "win32":
            self.style.theme_use('winnative')
        self.style.configure('.',background=_bgcolor)
        self.style.configure('.',foreground=_fgcolor)
        self.style.configure('.',font="TkDefaultFont")
        self.style.map('.',background=
            [('selected', _compcolor), ('active',_ana2color)])

        top.geometry("1024x600+177+135")
        top.title("New Toplevel")



        self.Button1 = Button(top)
        self.Button1.place(relx=0.02, rely=0.9, height=45, width=280)
        self.Button1.configure(activebackground="#d9d9d9")
        self.Button1.configure(text='''Speed Down''')
        self.Button1.configure(width=342)

        self.Button2 = Button(top)
        self.Button2.place(relx=0.303, rely=0.9, height=45, width=410)
        self.Button2.configure(activebackground="#d9d9d9")
        self.Button2.configure(text='''Start''')
        self.Button2.configure(width=402)

        self.Button2_1 = Button(top)
        self.Button2_1.place(relx=0.713, rely=0.9, height=45, width=280)
        self.Button2_1.configure(activebackground="#d9d9d9")
        self.Button2_1.configure(cursor="fleur")
        self.Button2_1.configure(text='''Speed Up''')

        self.TSeparator1 = ttk.Separator(top)
        self.TSeparator1.place(relx=0.0, rely=0.867, relwidth=1.0)

        self.menubar = Menu(top,font="TkMenuFont",bg=_bgcolor,fg=_fgcolor)
        top.configure(menu = self.menubar)



        self.Labelframe1 = LabelFrame(top)
        self.Labelframe1.place(relx=0.02, rely=0.683, relheight=0.142
                , relwidth=0.967)
        self.Labelframe1.configure(relief=GROOVE)
        self.Labelframe1.configure(text='''Time''')
        self.Labelframe1.configure(width=990)

        self.TProgressbar1 = ttk.Progressbar(self.Labelframe1)
        self.TProgressbar1.place(relx=0.02, rely=0.353, relwidth=0.96
                , relheight=0.0, height=19, bordermode='ignore')
        self.TProgressbar1.configure(length="950")
        self.TProgressbar1.configure(maximum="60")
        self.TProgressbar1.configure(value="30")

        self.Label1 = Label(self.Labelframe1)
        self.Label1.place(relx=0.485, rely=0.706, height=17, width=34
                , bordermode='ignore')
        self.Label1.configure(text='''30:00''')

        self.Labelframe2 = LabelFrame(top)
        self.Labelframe2.place(relx=0.02, rely=0.4, relheight=0.258
                , relwidth=0.293)
        self.Labelframe2.configure(relief=GROOVE)
        self.Labelframe2.configure(text='''Covered''')
        self.Labelframe2.configure(width=300)

        self.Label2 = Label(self.Labelframe2)
        self.Label2.place(relx=0.1, rely=0.323, height=57, width=94
                , bordermode='ignore')
        self.Label2.configure(text='''12''')
        self.Label2.configure(width=94)

        self.Label2_2 = Label(self.Labelframe2)
        self.Label2_2.place(relx=0.567, rely=0.323, height=57, width=94
                , bordermode='ignore')
        self.Label2_2.configure(activebackground="#f9f9f9")
        self.Label2_2.configure(text='''Km''')

        self.Labelframe2_3 = LabelFrame(top)
        self.Labelframe2_3.place(relx=0.02, rely=0.117, relheight=0.258
                , relwidth=0.293)
        self.Labelframe2_3.configure(relief=GROOVE)
        self.Labelframe2_3.configure(text='''HeartRate''')
        self.Labelframe2_3.configure(width=300)

        self.Label2_4 = Label(self.Labelframe2_3)
        self.Label2_4.place(relx=0.1, rely=0.323, height=57, width=94
                , bordermode='ignore')
        self.Label2_4.configure(activebackground="#f9f9f9")
        self.Label2_4.configure(font=font9)
        self.Label2_4.configure(text='''110''')

        self.Label2_3 = Label(self.Labelframe2_3)
        self.Label2_3.place(relx=0.567, rely=0.323, height=57, width=94
                , bordermode='ignore')
        self.Label2_3.configure(activebackground="#f9f9f9")
        self.Label2_3.configure(text='''bpm''')

        self.Labelframe2_4 = LabelFrame(top)
        self.Labelframe2_4.place(relx=0.693, rely=0.117, relheight=0.258
                , relwidth=0.293)
        self.Labelframe2_4.configure(relief=GROOVE)
        self.Labelframe2_4.configure(text='''Burned Calories''')
        self.Labelframe2_4.configure(width=300)

        self.Label2_5 = Label(self.Labelframe2_4)
        self.Label2_5.place(relx=0.1, rely=0.323, height=57, width=94
                , bordermode='ignore')
        self.Label2_5.configure(activebackground="#f9f9f9")
        self.Label2_5.configure(text='''273''')

        self.Label2_3 = Label(self.Labelframe2_4)
        self.Label2_3.place(relx=0.567, rely=0.323, height=57, width=94
                , bordermode='ignore')
        self.Label2_3.configure(activebackground="#f9f9f9")
        self.Label2_3.configure(text='''Cal''')

        self.Labelframe2_4 = LabelFrame(top)
        self.Labelframe2_4.place(relx=0.693, rely=0.4, relheight=0.258
                , relwidth=0.293)
        self.Labelframe2_4.configure(relief=GROOVE)
        self.Labelframe2_4.configure(text='''Steps''')
        self.Labelframe2_4.configure(width=300)

        self.Label2_5 = Label(self.Labelframe2_4)
        self.Label2_5.place(relx=0.133, rely=0.323, height=57, width=94
                , bordermode='ignore')
        self.Label2_5.configure(activebackground="#f9f9f9")
        self.Label2_5.configure(text='''115''')

        self.Label2_3 = Label(self.Labelframe2_4)
        self.Label2_3.place(relx=0.567, rely=0.323, height=57, width=94
                , bordermode='ignore')
        self.Label2_3.configure(activebackground="#f9f9f9")
        self.Label2_3.configure(text='''Steps/min''')

        self.Labelframe3 = LabelFrame(top)
        self.Labelframe3.place(relx=0.332, rely=0.117, relheight=0.542
                , relwidth=0.342)
        self.Labelframe3.configure(relief=GROOVE)
        self.Labelframe3.configure(text='''Speed''')
        self.Labelframe3.configure(width=350)

        self.Label3 = Label(self.Labelframe3)
        self.Label3.place(relx=0.029, rely=0.092, height=147, width=324
                , bordermode='ignore')
        self.Label3.configure(text='''10''')
        self.Label3.configure(width=324)

        self.Label3_4 = Label(self.Labelframe3)
        self.Label3_4.place(relx=0.029, rely=0.492, height=147, width=324
                , bordermode='ignore')
        self.Label3_4.configure(activebackground="#f9f9f9")
        self.Label3_4.configure(text='''Km/hr''')

    @staticmethod
    def popup1(event, *args, **kwargs):
        Popupmenu1 = Menu(root, tearoff=0)
        Popupmenu1.configure(activebackground="#f9f9f9")
        Popupmenu1.post(event.x_root, event.y_root)






if __name__ == '__main__':
    vp_start_gui()



